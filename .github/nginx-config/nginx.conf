upstream frontend {
    include /etc/nginx/front-active-upstream.conf;
    keepalive 256;
}

upstream backend {
    include /etc/nginx/back-active-upstream.conf;
    keepalive 256;
}

# HTTP 요청은 HTTPS로 리다이렉트
server {
    listen 80;
    server_name gemspi.kro.kr;
    location /.well-known/acme-challenge/ {
        alias /var/www/certbot/.well-known/acme-challenge/;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen 443 quic reuseport;
    server_name gemspi.kro.kr;

    http2 on;
    ssl_certificate /etc/letsencrypt/live/gemspi.kro.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gemspi.kro.kr/privkey.pem;
    ssl_protocols TLSv1.3;  # 필요 시 TLS1.2 포함 가능

    # resolver 설정 (예: Google Public DNS)
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # HTTP/3 지원 헤더
    add_header Alt-Svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400, h3-32=":443"; ma=86400, h3-34=":443"; ma=86400';
    add_header QUIC-Status $http3;

    # HSTS 적용 (옵션)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 백엔드 API 경로 (/items/) 우선 처리
    location /items/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 600s;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;
    }

    # 그 외 모든 요청은 프론트엔드로 전달
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 600s;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
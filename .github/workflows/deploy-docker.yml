name: Deploy to EC2
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.13.0"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install dependencies
        if: ${{ steps.npm-cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.OLKK_GITHUB_TOKEN }}

      - name: List directory contents
        run: ls -R

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      HOST: ${{ secrets.HOST }}
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            APP_NAME="lfr-f"
            NEW_ENV="blue"

            # 1. 최신 Docker 이미지 가져오기
            docker pull ${{ env.IMAGE_NAME }}

            # 2. 새로운 컨테이너 실행
            docker run -d -p 18081:5173 --name $APP_NAME-$NEW_ENV  \
            --network olkkani_network \
            -e TZ=Asia/Seoul \
            ${{ env.IMAGE_NAME }}
